from flask import Flask, request, abort
from linebot import LineBotApi, WebhookHandler
from linebot.exceptions import InvalidSignatureError
from linebot.models import MessageEvent, TextMessage, TextSendMessage

import instaloader
import pandas as pd
import datetime
import os

# ---------------- LINE Ë®≠ÂÆö ----------------
ACCESS_TOKEN = "B799OHjuXJ9+mFFz53Jvlct37fZuOOv1eJq8yY4QZPOZ96GAAChnkrsJGPoGEF9gU4mjKXiZrMNl+FTegJYKH5hPctXrlVvjkbGkhUNDfj0q0DVf22B5or9azKw3DNpeERyJ7JhO5F/Wba9EnvW+GgdB04t89/1O/w1cDnyilFU="
SECRET = "22a7b9ed4003a08778308b10e7d0047a"

line_bot_api = LineBotApi(ACCESS_TOKEN)
handler = WebhookHandler(SECRET)

# ---------------- Instagram ÊäìÁ≤âÁµ≤ ----------------
def get_followers(username):
    L = instaloader.Instaloader()
    profile = instaloader.Profile.from_username(L.context, username)
    return profile.followers

def save_date(username, followers):
    today = datetime.date.today()
    try:
        df = pd.read_csv("followers.csv")
    except FileNotFoundError:
        df = pd.DataFrame(columns=["date", "username", "followers"])

    mask = (df["date"] == str(today)) & (df["username"] == username)
    if mask.any():
        df.loc[mask, "followers"] = followers
    else:
        new_row = pd.DataFrame([[str(today), username, followers]], columns=["date", "username", "followers"])
        df = pd.concat([df, new_row], ignore_index=True)

    df = df.drop_duplicates(subset=["date", "username"], keep="last")
    df.to_csv("followers.csv", index=False)

def get_difference(username, today_followers):
    try:
        df = pd.read_csv("followers.csv")
        df_user = df[df["username"] == username]
        if len(df_user) < 2:
            return "È¶ñÊ¨°Á¥ÄÈåÑÔºåÁÑ°Ê≥ïÊØîËºÉÊò®Êó•Ë≥áÊñô„ÄÇ"
        yesterday_followers = df_user.iloc[-2]["followers"]
        diff = today_followers - yesterday_followers
        if diff > 0:
            return f"ËºÉÊò®Êó•Â¢ûÂä† {diff} ‰ΩçÁ≤âÁµ≤ üéâ"
        elif diff < 0:
            return f"ËºÉÊò®Êó•Ê∏õÂ∞ë {-diff} ‰ΩçÁ≤âÁµ≤ üò¢"
        else:
            return "ËàáÊò®Êó•ÊåÅÂπ≥ üëç"
    except:
        return "ÁÑ°Ê≥ïÊØîËºÉÊò®Êó•Ë≥áÊñô"

# ---------------- LINE Webhook ----------------
app = Flask(__name__)

@app.route("/callback", methods=['POST'])
def callback():
    signature = request.headers.get('X-Line-Signature', '')
    body = request.get_data(as_text=True)
    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)
    return 'OK'

@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    text = event.message.text.strip()
    if text.lower() == "ÊäìÁ≤âÁµ≤":
        username = "the_firsttake"  # ÁõÆÊ®ô IG Â∏≥Ëôü
        try:
            followers = get_followers(username)
            save_date(username, followers)
            diff_msg = get_difference(username, followers)
            reply = f"Â∏≥ËôüÔºö{username}\nÁ≤âÁµ≤Êï∏Ôºö{followers}\n{diff_msg}"
        except Exception as e:
            reply = f"ÊäìÂèñÂ§±ÊïóÔºö{e}"
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=reply))
    else:
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text="Ë´ãÂÇ≥ 'ÊäìÁ≤âÁµ≤' ‰æÜÊü•Ë©¢Á≤âÁµ≤Êï∏„ÄÇ"))

# ---------------- Render ÈÉ®ÁΩ≤ ----------------
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
